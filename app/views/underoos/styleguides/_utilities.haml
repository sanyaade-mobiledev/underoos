
#utils_helpers.sg-spy-landing
.sg-subsection
  %h3.sg-subheading Helpers <span>helpers.sass</span>
  %table.box.vborder.banded.thead-decorate
    %thead
      %tr
        %th Class
        %th Usage
    %tbody
      %tr
        %td <code>.clearfixer</code>
        %td The <a href="http://nicolasgallagher.com/micro-clearfix-hack/">micro clearfix</a> from Nicolas Gallagher
      %tr
        %td <code>.clearfix</code>
        %td The standard clearfix from <a href="http://compass-style.org/reference/compass/utilities/general/clearfix/#mixin-clearfix">Compass</a>, utilizing <code>overflow hidden</code>
      %tr
        %td <code>.ir</code>
        %td For use in image replacement, typically on links
      %tr
        %td <code>.hidden</code>
        %td The opposite of <code>shown</code>, elements are completely hidden from screen readers and browsers
      %tr
        %td <code>.shown</code>
        %td Reverse the effects of <code>hidden</code>
      %tr
        %td <code>.visuallyhidden</code>
        %td Only visually hidden, elements are still available to screen readers, use this class instead of <code>display:none</code>
      %tr
        %td <code>.visuallyshown</code>
        %td Reverse the effects of <code>.visuallyhidden</code>
      %tr
        %td <code>.invisible</code>
        %td Keeps elements in the DOM, but hidden from view and screen readers
      %tr
        %td <code>.pull-left</code>
        %td Floats an element to the left (<em>Gabe, your welcome</em>)
      %tr
        %td <code>.pull-right</code>
        %td Floats an element to the right (<em>may be renamed to: </em><code>.varela</code>)
      %tr
        %td <code>.base-column</code>
        %td For use by extension for <code>column</code> classes
      %tr
        %td <code>.base-column-right</code>
        %td For use by extension for <code>column</code> classes, floats elements to the right
      %tr
        %td <code>.base-row</code>
        %td For use by extension for <code>row</code> classes
  .notification.important.fade.in
    %p <strong>Pro Tip!</strong> When using <code>visuallyhidden</code> and <code>visuallyshown</code> with <code>box-shadow</code>, you'll need to add <code>clip:initial</code> to get the shadows to reappear

#utils_transitions.sg-spy-landing
.sg-subsection
  %h3.sg-subheading Transitions <span>transitions.sass</span>
  %table.box.vborder.banded.thead-decorate
    %thead
      %tr
        %th Class
        %th Usage
    %tbody
      %tr
        %td <code>.fade</code>
        %td Transitions an element to an <code>opacity</code> of <code>0</code>
      %tr
        %td <code>.fade.in</code>
        %td Transitions an element to an <code>opacity</code> of <code>1</code>
      %tr
        %td <code>.collapse</code>
        %td Transitions an element to a <code>height</code> of <code>0</code>
      %tr
        %td <code>.collapse.in</code>
        %td Transitions an element to a <code>height</code> of <code>auto</code>

#utils_mixins.sg-spy-landing
.sg-subsection
  %h3.sg-subheading Mixins <span>mixins/*.sass</span>
  %table.box.vborder.banded.thead-decorate
    %thead
      %tr
        %th Mixin
        %th Parameters
        %th Usage
    %tbody
      %tr
        %td <code>+arrow_[north|south|east|west]</code>
        %td <code>$color:#000, $size:5px</code>
        %td Draws a directional arrow, typically used for pseudo elements
      %tr
        %td <code>+clearfixer</code>
        %td(style="color: #999;") <em>none</em>
        %td The <a href="http://nicolasgallagher.com/micro-clearfix-hack/">micro clearfix</a> from Nicolas Gallagher
      %tr
        %td <code>+clearfix</code>
        %td(style="color: #999;") <em>none</em>
        %td The standard clearfix from <a href="http://compass-style.org/reference/compass/utilities/general/clearfix/#mixin-clearfix">Compass</a>, utilizing <code>overflow hidden</code>
      %tr
        %td <code>+background-darken-border</code>
        %td <code>$color, $percentage:20%</code>
        %td Fill a background and stroke a border with a darkened percentage
      %tr
        %td <code>+font-size</code>
        %td <code>$target_px, $context:$context_px</code>
        %td Inject <code>font-size</code> for <code>px</code> and <code>rem</code>: <a href="http://snook.ca/archives/html_and_css/font-size-with-rem">more info</a>
      %tr
        %td <code>+sharpen-image</code>
        %td(style="color: #999;") <em>none</em>
        %td Sharpen an image due to up/down scaling: <a href="http://stitchcss.com/#sharpen_image">stitchcss</a>
      %tr
        %td <code>+high-quality-image</code>
        %td(style="color: #999;") <em>none</em>
        %td Improve rendering quality on an image: <a href="http://stitchcss.com/#high_quality_image">stitchcss</a>
      %tr
        %td <code>+low-quality-image</code>
        %td(style="color: #999;") <em>none</em>
        %td Decrease rendering quality in favor of speed: <a href="http://stitchcss.com/#low_quality_image">stitchcss</a>
      %tr
        %td <code>+tab-focus</code>
        %td(style="color: #999;") <em>none</em>
        %td Resets default outlines for webkit on focusable elements
  .notification.important.fade.in
    %p <strong>Pro Tip!</strong> There are variables available within <code>timing-equations.sass</code> for defining <code>cubic-bezier</code> values.

#utils_functions.sg-spy-landing
.sg-subsection
  %h3.sg-subheading Functions <span>mixins/conversions.sass</span>
  %table.box.vborder.banded.thead-decorate
    %thead
      %tr
        %th Function
        %th Parameters
        %th Usage
    %tfoot
      %tr
        %td(colspan="3") All functions return a value
    %tbody
      %tr
        %td <code>to_em</code>
        %td <code>$target_px, $context:$base_font_size</code>
        %td Convert target <code>px</code> value to <code>em</code> in context constraints of the base font size
      %tr
        %td <code>to_rem</code>
        %td <code>$target_px, $context:$context_px</code>
        %td Convert target <code>px</code> value to <code>rem</code> in context constraints of the user's base font size
      %tr
        %td <code>to_percent</code>
        %td <code>$target_px, $context:$base_width</code>
        %td Convert target <code>px</code> value to <code>percentage</code> in context constraints of the container's width
      %tr
        %td <code>vertical_pixel</code>
        %td <code>$target_px</code>
        %td Returns the vertical rhythm in <code>px</code> calculated from the <code>$base_vertical</code> setting
      %tr
        %td <code>vertical_em</code>
        %td <code>$target_px</code>
        %td Returns the vertical rhythm in <code>em</code> calculated from the <code>$base_vertical</code> setting
      %tr
        %td <code>vertical_percent</code>
        %td <code>$target_px</code>
        %td Returns the vertical rhythm in <code>percent</code> calculated from the <code>$base_vertical</code> setting
  .notification.warning.fade.in
    %p <strong>Warning!</strong> Define <code>$context_px</code>, <code>$base_font_size</code>, <code>$base_width</code> and <code>$base_vertical</code> prior to the functions being loaded.
  .notification.important.fade.in
    %p <strong>Important!</strong> When calculating vertical rhythm, always pass in what the expected pixel value is for the element.

#utils_polyfill.sg-spy-landing
.sg-subsection
  %h3.sg-subheading Polyfills <span>polyfill/*.sass</span>
  %p Most projects benefit greatly from using a library like <a href="http://compass-style.org/">Compass</a> or <a href="http://thoughtbot.com/bourbon/">Bourbon</a>. Underoos is not designed to replace these libraries, but rather sit on top of them. There may be times when using one of these libraries isn't an option, so Underoos provides a few simple polyfill mixins in it's place.
  %table.box.vborder.banded.thead-decorate
    %thead
      %tr
        %th Mixin
        %th Parameters
        %th Usage
    %tfoot
      %tr
        %td(colspan="3") The mixins above provided by either Compass, Bourbon or the polyfills are all interchangeable to allow Underoos to be as agnostic as possible.
    %tbody
      %tr
        %td <code>+border-radius</code>
        %td <code>$radii</code>
        %td Draws rounded corners on an element (also includes mixins for individual corners and sides)
      %tr
        %td <code>+box-shadow</code>
        %td <code>$shadow-1:none, $shadow-n:false, ...</code>
        %td Draws an outer or inset shadow around an element (supports up to 9 shadow parameters)
      %tr
        %td <code>+box-sizing</code>
        %td <code>$type:border-box</code>
        %td Changes the box model used for calculating an elements width and height
      %tr
        %td <code>+box-sizing</code>
        %td <code>$type:border-box</code>
        %td Changes the box model used for calculating an elements width and height
      %tr
        %td <code>+inline-block</code>
        %td(style="color: #999;") <em>none</em>
        %td Adds support for <code>display:inline-block</code> down to IE7
      %tr
        %td <code>+opacity</code>
        %td <code>$alpha:1</code>
        %td Provides cross browser opacity, values are between<code>0-1</code>
      %tr
        %td <code>+transition</code>
        %td <code>$transition-1:all 0.25s, $transition-n:false, ...</code>
        %td Adds vendor prefixes for transitions (supports up to 9 transition parameters)
      %tr
        %td <code>+user-select</code>
        %td <code>$type:none</code>
        %td Define whether an element is selectable
      %tr
        %td <code>combine</code>
        %td <code>$value-1:none, $value-n:false, ...</code>
        %td A function used to <em>combine</em> and normalize multiple parameters for a polyfill (supports up to 9 values)
  .notification.important.fade.in
    %p <strong>Pro Tip!</strong> To include all polyfills in a project: <code>@import polyfills/polyfills</code>
  .notification.warning.fade.in
    %p <strong>Warning!</strong> The <code>combine</code> function for mixin values only accepts 9 values, this is inline with the Bourbon library (Compass supports 10!)
  .notification.danger.fade.in
    %p <strong>Danger!</strong> If a project uses Compass or Bourbon, make sure not to import these polyfills

